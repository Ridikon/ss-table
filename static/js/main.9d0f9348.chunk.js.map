{"version":3,"sources":["models/month.js","models/users.js","services/user-service.js","services/progress-service.js","components/project-progress/index.js","components/project-progress/project-progress.js","components/table-components/table-row/index.js","components/table-components/table-row/table-row.js","constants.js","components/dropdown-btn/index.js","components/dropdown-btn/dropdown-btn.js","components/table-components/table-head/index.js","components/table-components/table-head/table-head.js","components/table-components/table-filter/index.js","components/table-components/table-filter/table-filter.js","app/app.js","app/index.js","index.js"],"names":["month","users","id","name","img","projects","status","start","end","progress","UserService","_month","_users","this","ProgressService","_getDays","numberOfMonth","days","i","Date","getDate","getPositionDay","date","day","getMonth","getOneDayWidth","colWidth","getTodayPosition","ProjectProgress","bgClass","textClass","clsBg","clsText","progressService","push","className","style","styles","oneDayWidth","startPosition","endPosition","left","width","setStyles","join","TableRow","props","state","progressColWidth","todayPosition","resizeEvent","e","setTimeout","computeProgressColWidth","computeTodayPosition","progressRef","React","createRef","window","addEventListener","prevProps","setProgressColWidth","current","clientWidth","setState","user","_","map","project","badgeClasses","setClass","key","renderClientInfo","href","colSpan","ref","index","rowSpan","length","src","alt","type","Component","DropdownBtn","children","onClickEvent","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","htmlFor","value","onChange","target","max","min","TableHead","onChangeMonthNumber","months","year","getFullYear","setMonthWidth","monthDaysCount","getDaysInMonth","monthCol","slice","aria-hidden","TableFilter","onFilter","onResetFilter","useState","setName","deal","setDeal","setStatus","onSearchChange","placeholder","onClick","getSearchResult","item","field","q","toLowerCase","includes","search","arr","searchField","filter","userService","App","usersState","setUsersState","term","setTerm","searchType","setSearchType","monthNumber","setMonthNumber","visibleUsers","clonedArr","projectEmpty","Math","random","filterUsersData","cloneDeep","useEffect","getUsers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d0f9348.chunk.js","sourcesContent":["export const month = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December'\r\n];\r\n","export const users = [\r\n  {\r\n    id: 1,\r\n    name: 'John Dow',\r\n    img: 'https://img.icons8.com/carbon-copy/2x/user.png',\r\n    projects: [\r\n      {\r\n        id: 1,\r\n        name: 'John Project 1',\r\n        status: 'billable',\r\n        start: 'March 31, 2019',\r\n        end: 'June 2, 2019',\r\n        progress: 80\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'John Project 2',\r\n        status: 'vacation',\r\n        start: 'February 19, 2019',\r\n        end: 'September 20, 2019',\r\n        progress: 50\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'John Project 3',\r\n        status: 'vacation',\r\n        start: 'May 8, 2019',\r\n        end: 'September 20, 2019',\r\n        progress: 60\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Mike Johnson',\r\n    img: 'https://img.icons8.com/carbon-copy/2x/businessman.png',\r\n    projects: [\r\n      {\r\n        id: 1,\r\n        name: 'Mike Project 1',\r\n        status: 'internal',\r\n        start: 'January 21, 2019',\r\n        end: 'July 2, 2019',\r\n        progress: 100\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Mike Project 2',\r\n        status: 'potential',\r\n        start: 'June 21, 2019',\r\n        end: 'August 10, 2019',\r\n        progress: 30\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Ben Gur',\r\n    img: 'https://img.icons8.com/plasticine/100/000000/user-male-circle.png',\r\n    projects: [\r\n      {\r\n        id: 1,\r\n        name: 'Ben Project 1',\r\n        status: 'billable',\r\n        start: 'March 8, 2019',\r\n        end: 'June 2, 2019',\r\n        progress: 80\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Ben Project 2',\r\n        status: 'potential',\r\n        start: 'May 20, 2019',\r\n        end: 'September 20, 2019',\r\n        progress: 50\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'Ben Project 3',\r\n        status: 'vacation',\r\n        start: 'May 15, 2019',\r\n        end: 'September 20, 2019',\r\n        progress: 60\r\n      },\r\n      {\r\n        id: 4,\r\n        name: 'Ben Project 4',\r\n        status: 'internal',\r\n        start: 'May 15, 2019',\r\n        end: 'September 20, 2019',\r\n        progress: 60\r\n      },\r\n      {\r\n        id: 5,\r\n        name: 'Ben Project 5',\r\n        status: 'vacation',\r\n        start: 'February 15, 2019',\r\n        end: 'May 20, 2019',\r\n        progress: 100\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Loki',\r\n    img: 'https://img.icons8.com/plasticine/100/000000/user-male-circle.png',\r\n    projects: [\r\n      // {\r\n      //   id: 1,\r\n      //   name: 'Loki Project 1',\r\n      //   status: '',\r\n      //   start: null,\r\n      //   end: null,\r\n      //   progress: null\r\n      // }\r\n    ]\r\n  }\r\n];\r\n","import { month } from '../models/month'\r\nimport { users } from '../models/users';\r\n\r\nexport default class UserService {\r\n  _month = month;\r\n  _users = users;\r\n\r\n  getUsers() {\r\n    return this._users\r\n  }\r\n\r\n  getMonth() {\r\n    return this._month;\r\n  }\r\n}\r\n","export default class ProgressService {\r\n  _getDays = (numberOfMonth) => {\r\n    let days = 0;\r\n\r\n    for (let i = 1; i <= numberOfMonth; i++) {\r\n      days += new Date(2019, i, 0).getDate();\r\n    }\r\n\r\n    return days\r\n  };\r\n\r\n  getPositionDay = (date) => {\r\n    const day = new Date(date).getDate();\r\n    const month = new Date(date).getMonth();\r\n\r\n    return this._getDays(month) + day;\r\n  };\r\n\r\n  getOneDayWidth = (colWidth, numberOfMonth) => {\r\n    return colWidth / this._getDays(numberOfMonth)\r\n  };\r\n\r\n  getTodayPosition = (colWidth, numberOfMonth, date) => {\r\n    return this.getOneDayWidth(colWidth, numberOfMonth) * this.getPositionDay(date)\r\n  };\r\n}\r\n","import ProjectProgress from './project-progress'\r\n\r\nexport default ProjectProgress;\r\n","import React from 'react';\r\n\r\nimport ProgressService from '../../services/progress-service';\r\n\r\nimport './project-progress.scss'\r\n\r\nconst ProjectProgress = ({ start, end, progress, numberOfMonth, bgClass, textClass, colWidth }) => {\r\n  const clsBg = ['progress-line-bg'];\r\n  const clsText = ['progress-line-text'];\r\n  const progressService = new ProgressService();\r\n\r\n  if (bgClass) {\r\n    clsBg.push(bgClass)\r\n  }\r\n\r\n  if (textClass) {\r\n    clsText.push(textClass)\r\n  }\r\n\r\n  function setStyles() {\r\n    const styles = {};\r\n    const oneDayWidth = progressService.getOneDayWidth(colWidth, numberOfMonth);\r\n    const startPosition = progressService.getPositionDay(start);\r\n    const endPosition = progressService.getPositionDay(end);\r\n\r\n    styles.left = (oneDayWidth * startPosition) + 'px';\r\n    styles.width = ((oneDayWidth * endPosition) - (oneDayWidth * startPosition)) + 'px';\r\n\r\n    return styles;\r\n  }\r\n\r\n  return (\r\n    <div className=\"progress-line\">\r\n\t\t\t<span\r\n        className=\"progress-line-wrapper\"\r\n        style={setStyles()}\r\n      >\r\n\t\t\t\t<span className={clsBg.join(' ')}/>\r\n\t\t\t\t<span className={clsText.join(' ')}>\r\n\t\t\t\t\t{progress ? `${progress}%` : ''}\r\n\t\t\t\t</span>\r\n\t\t\t</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectProgress;\r\n","import TableRow from './table-row'\r\n\r\nexport default TableRow;\r\n","import React, { Component } from 'react';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport ProjectProgress from '../../project-progress';\r\nimport ProgressService from '../../../services/progress-service';\r\nimport { CONST_LAST_COL_WIDTH } from '../../../constants'\r\n\r\nimport './table-row.scss'\r\n\r\nexport default class TableRow extends Component {\r\n  progressService = new ProgressService();\r\n\r\n  state = {\r\n    progressColWidth: 0,\r\n    todayPosition: 0\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.progressRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.resizeEvent);\r\n\r\n    this.computeProgressColWidth();\r\n    this.computeTodayPosition()\r\n  }\r\n\r\n  resizeEvent = (e) => {\r\n    setTimeout(() => {\r\n      this.computeProgressColWidth();\r\n      this.computeTodayPosition()\r\n    }, 100)\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.numberOfMonth === this.props.numberOfMonth) {\r\n      return;\r\n    }\r\n\r\n    this.computeProgressColWidth();\r\n    this.computeTodayPosition()\r\n  }\r\n\r\n  computeProgressColWidth() {\r\n    const { setProgressColWidth } = this.props;\r\n    const node = this.progressRef.current;\r\n    const progressColWidth = node.clientWidth - CONST_LAST_COL_WIDTH;\r\n\r\n    setProgressColWidth(progressColWidth);\r\n\r\n    this.setState({\r\n      progressColWidth\r\n    });\r\n  }\r\n\r\n  computeTodayPosition() {\r\n    const { numberOfMonth } = this.props;\r\n    const node = this.progressRef.current;\r\n    const progressColWidth = node.clientWidth - CONST_LAST_COL_WIDTH;\r\n    const todayPosition = this.progressService.getTodayPosition(progressColWidth, numberOfMonth, new Date());\r\n\r\n    this.setState({\r\n      todayPosition\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Render client info once\r\n   * @param user\r\n   * @param index\r\n   * @returns {null|*}\r\n   */\r\n  static renderClientInfo(user, index) {\r\n    const { img, name, projects } = user;\r\n\r\n    if (!index) {\r\n      return (\r\n        <td rowSpan={projects.length} className=\"user\">\r\n          <div>\r\n            <img src={img} alt=\"user\"/>\r\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n            <a href=\"#\">{name}</a>\r\n          </div>\r\n        </td>\r\n      )\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  static setClass(status, type) {\r\n    switch (status) {\r\n      case 'billable':\r\n        return `${type}-success`;\r\n      case 'vacation':\r\n        return `${type}-secondary`;\r\n      case 'internal':\r\n        return `${type}-primary`;\r\n      case 'potential':\r\n        return `${type}-warning`;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { numberOfMonth, user } = this.props;\r\n    const { progressColWidth, todayPosition } = this.state;\r\n\r\n    return _.map(user.projects, (project, i) => {\r\n      const { id, status, name, start, end, progress } = project;\r\n      const badgeClasses = ['badge', 'badge-pill', TableRow.setClass(status, 'badge')];\r\n\r\n      return (\r\n        <tr key={id} className=\"user-row\">\r\n\r\n          {TableRow.renderClientInfo(user, i)}\r\n\r\n          {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n          <td><a href=\"#\" className=\"pl-3\">{name}</a></td>\r\n          <td><span className={badgeClasses.join(' ')}>{status}</span></td>\r\n          <td\r\n            className=\"progress-col\"\r\n            colSpan={numberOfMonth + 1}\r\n            ref={this.progressRef}\r\n          >\r\n            <ProjectProgress\r\n              bgClass={TableRow.setClass(status, 'bg')}\r\n              textClass={TableRow.setClass(status, 'text')}\r\n              colWidth={progressColWidth}\r\n              numberOfMonth={numberOfMonth}\r\n              start={start}\r\n              end={end}\r\n              progress={progress}\r\n            />\r\n            <span\r\n              style={{ left: `${todayPosition}px` }}\r\n              className=\"bg-primary vertical-line\"\r\n            />\r\n          </td>\r\n        </tr>\r\n      )\r\n    })\r\n  }\r\n};\r\n","export const CONST_LAST_COL_WIDTH = 50;\r\n","import DropdownBtn from './dropdown-btn'\r\n\r\nexport default DropdownBtn;\r\n","import React from 'react';\r\n\r\nconst DropdownBtn = ({ children, onClickEvent, numberOfMonth }) => {\r\n  const onChangeMonthNumber = (e) => {\r\n    onClickEvent(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown dropleft\">\r\n      <button className=\"btn\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n              aria-expanded=\"false\">\r\n        {children}\r\n      </button>\r\n      <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n        <label htmlFor=\"month\">Month count:</label>\r\n        <input\r\n          className=\"form-control\"\r\n          id=\"month\"\r\n          type=\"number\"\r\n          name=\"number\"\r\n          value={numberOfMonth}\r\n          onChange={onChangeMonthNumber}\r\n          max=\"12\"\r\n          min=\"1\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropdownBtn;\r\n","import TableHead from './table-head';\r\n\r\nexport default TableHead;\r\n","import React from 'react';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport DropdownBtn from '../../dropdown-btn';\r\nimport UserService from '../../../services/user-service'\r\nimport { CONST_LAST_COL_WIDTH } from '../../../constants'\r\n\r\nimport './table-head.scss'\r\n\r\nconst TableHead = ({ numberOfMonth, onChangeMonthNumber, oneDayWidth }) => {\r\n  const userService = new UserService();\r\n  const months = userService.getMonth();\r\n  const year = new Date().getFullYear();\r\n\r\n  const getDaysInMonth = (month, year) => {\r\n    return new Date(year, month, 0).getDate();\r\n  };\r\n\r\n  const setMonthWidth = (month) => {\r\n    const monthDaysCount = getDaysInMonth(month + 1, year);\r\n    return oneDayWidth * monthDaysCount\r\n  };\r\n\r\n  const monthCol = _.map(months, (month, i) => {\r\n    if (i > numberOfMonth - 1) {\r\n      return null;\r\n    }\r\n\r\n    if (numberOfMonth > 8) {\r\n      month = _.slice(month, 0, 3)\r\n    }\r\n\r\n    return (\r\n      <th\r\n        key={month}\r\n        className=\"column-month\"\r\n        style={{ width: `${setMonthWidth(i)}px` }}\r\n      >\r\n        <div className=\"text-center\">\r\n          <span>{month} {year}</span>\r\n        </div>\r\n      </th>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <tr>\r\n      <th style={{ width: '15%' }}>Full Name</th>\r\n      <th style={{ width: '15%' }}>Deal</th>\r\n      <th style={{ width: '120px' }}/>\r\n\r\n      {monthCol}\r\n\r\n      <th style={{ width: `${CONST_LAST_COL_WIDTH}px` }}>\r\n        <div className=\"table-head-dropdown\">\r\n          <DropdownBtn\r\n            onClickEvent={onChangeMonthNumber}\r\n            numberOfMonth={numberOfMonth}\r\n          >\r\n            <i className=\"fa fa-sliders\" aria-hidden=\"true\"/>\r\n          </DropdownBtn>\r\n        </div>\r\n      </th>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TableHead;\r\n","import TableFilter from './table-filter'\r\n\r\nexport default TableFilter;\r\n","import React, { useState } from 'react';\r\n\r\nimport './table-filter.scss'\r\n\r\nimport { CONST_LAST_COL_WIDTH } from '../../../constants'\r\n\r\nconst Filter = ({ numberOfMonth, onFilter, onResetFilter }) => {\r\n  const [name, setName] = useState('');\r\n  const [deal, setDeal] = useState('');\r\n  const [status, setStatus] = useState('');\r\n\r\n  const onSearchChange = ({ target: { value, name } }) => {\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'deal':\r\n        setDeal(value);\r\n        break;\r\n      case 'status':\r\n        setStatus(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    onFilter(value, name)\r\n  };\r\n\r\n  const onReset = () => {\r\n    setName('');\r\n    setDeal('');\r\n    setStatus('');\r\n    onResetFilter();\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <th>\r\n        <input\r\n          className=\"form-control form-control-sm\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          placeholder=\"Title\"\r\n          onChange={onSearchChange}\r\n        />\r\n      </th>\r\n      <th>\r\n        <input\r\n          className=\"form-control form-control-sm\"\r\n          type=\"text\"\r\n          name=\"deal\"\r\n          value={deal}\r\n          placeholder=\"Title\"\r\n          onChange={onSearchChange}\r\n        />\r\n      </th>\r\n      <th>\r\n        <select\r\n          className=\"form-control form-control-sm\"\r\n          value={status}\r\n          name=\"status\"\r\n          onChange={onSearchChange}\r\n        >\r\n          <option value=\"\">Status</option>\r\n          <option value=\"billable\">Billable</option>\r\n          <option value=\"vacation\">Vacation</option>\r\n          <option value=\"internal\">Internal</option>\r\n          <option value=\"potential\">Potential</option>\r\n        </select>\r\n      </th>\r\n      <th colSpan={numberOfMonth}/>\r\n      <th className=\"text-right filter-reset-col\" style={{ width: `${CONST_LAST_COL_WIDTH}px` }}>\r\n        <span className=\"filter-reset-btn\" onClick={onReset}>\r\n          Reset\r\n        </span>\r\n      </th>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport UserService from '../services/user-service'\r\nimport ProgressService from '../services/progress-service';\r\nimport TableRow from '../components/table-components/table-row';\r\nimport TableHead from '../components/table-components/table-head';\r\nimport TableFilter from '../components/table-components/table-filter';\r\n\r\nimport './app.scss'\r\n\r\nfunction getSearchResult(item, field, q) {\r\n  return item[field].toLowerCase().includes(q.toLowerCase())\r\n}\r\n\r\nfunction search(arr, searchField, q) {\r\n  return _.filter(arr, item => {\r\n    item.projects = _.filter(item.projects, project => getSearchResult(project, searchField, q));\r\n\r\n    if (item.projects.length) {\r\n      return item;\r\n    }\r\n\r\n    return null;\r\n  });\r\n}\r\n\r\nfunction filterUsersData(clonedArr, type, q) {\r\n  clonedArr = _.map(clonedArr, item => {\r\n    if (!item.projects.length) {\r\n      const projectEmpty = {\r\n        id: Math.random(),\r\n        name: '',\r\n        status: '',\r\n        start: null,\r\n        end: null,\r\n        progress: null\r\n      };\r\n\r\n      item.projects.push(projectEmpty)\r\n    }\r\n\r\n    return item;\r\n  });\r\n\r\n  switch (type) {\r\n    case 'name':\r\n      return _.filter(clonedArr, item => getSearchResult(item, type, q));\r\n    case 'deal':\r\n      return search(clonedArr, 'name', q);\r\n    case 'status':\r\n      return search(clonedArr, 'status', q);\r\n    default:\r\n      return clonedArr;\r\n  }\r\n}\r\n\r\nconst userService = new UserService();\r\nconst progressService = new ProgressService();\r\nconst numberOfMonth = 12;\r\n\r\nconst App = () => {\r\n  const [usersState, setUsersState] = useState([]);\r\n  const [term, setTerm] = useState('');\r\n  const [progressColWidth, setProgressColWidth] = useState(0);\r\n  const [searchType, setSearchType] = useState('');\r\n  const [monthNumber, setMonthNumber] = useState(numberOfMonth);\r\n\r\n  const oneDayWidth = progressService.getOneDayWidth(progressColWidth, numberOfMonth);\r\n  const visibleUsers = filterUsersData(_.cloneDeep(usersState), searchType, term);\r\n\r\n  useEffect(() => {\r\n    setUsersState(userService.getUsers())\r\n  }, []);\r\n\r\n  const renderBodyRow = (user) => {\r\n    return (\r\n      <TableRow\r\n        key={user.id}\r\n        user={user}\r\n        numberOfMonth={monthNumber}\r\n        setProgressColWidth={setProgressColWidth}\r\n      />\r\n    )\r\n  };\r\n\r\n  const onFilterEvent = (q, type) => {\r\n    setTerm(q);\r\n    setSearchType(type);\r\n  };\r\n\r\n  const onResetFilter = () => {\r\n    setTerm('');\r\n    setSearchType('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"table-responsive-md\">\r\n      <table className=\"table table-sm\">\r\n        <thead className=\"table-head\">\r\n          <TableHead\r\n            onChangeMonthNumber={setMonthNumber}\r\n            numberOfMonth={monthNumber}\r\n            oneDayWidth={oneDayWidth}\r\n          />\r\n          <TableFilter\r\n            numberOfMonth={monthNumber}\r\n            onFilter={onFilterEvent}\r\n            onResetFilter={onResetFilter}\r\n          />\r\n        </thead>\r\n        <tbody className=\"table-body\">\r\n          {_.map(visibleUsers, renderBodyRow)}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import App from './app'\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './app';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}